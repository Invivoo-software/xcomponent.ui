<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:docking="clr-namespace:XComponent.Common.UI.Docking"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="/Syncfusion.Tools.WPF;component/Framework/DockingManager/Themes/BlendStyle.xaml" />        
        <ResourceDictionary Source="/Syncfusion.SfInput.Wpf;component/Themes/Generic.xaml" />        
        <ResourceDictionary Source="/XComponent.Common.UI;component/Themes/Generic/Common.xaml"/>
        <ResourceDictionary Source="/XComponent.Common.UI;component/Themes/Generic/AutoCompleteSearchTextBox.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="XComponentHighlightBrush" Color="{DynamicResource XComponentHighlightColor}"/>
    <SolidColorBrush x:Key="MetroForegroundBrush" Color="{DynamicResource XComponentFontColor}"/>
    <SolidColorBrush x:Key="XComponentFontBrush" Color="{DynamicResource XComponentFontColor}"/>
    <SolidColorBrush x:Key="PopupBackgroundBrush" Color="{DynamicResource PopupBackgroundColor}"/>
    <SolidColorBrush x:Key="XComponentDockedTabSelectedHeaderBrush" Color="{DynamicResource XComponentScrollbarColor}"/>
    <SolidColorBrush x:Key="XComponentBackgroundBrush" Color="{DynamicResource XComponentBackgroundColor}"/>
    <SolidColorBrush x:Key="XComponentDockingBackgroundBrush" Color="{DynamicResource XComponentDockingBackgroundColor}"/>
    <SolidColorBrush x:Key="XComponentDockingHeaderBrush" Color="{DynamicResource XComponentDockingHeaderColor}"/>
    <system:Double x:Key="XComponentTabHeaderFontSize">12</system:Double>

    <FontFamily x:Key="MetroFontFamily">Segoe UI</FontFamily>

    <!-- Original syncfusion DockingManager file brush resources -->
    
    <LinearGradientBrush x:Key="Office2007Blue.BrushHeader" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF4C5F81" Offset="0.073"/>
        <GradientStop Color="#FF3F5478" Offset="0.854"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Office2007Blue.FlatKeyColor" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Office2007Blue.AwlKeyImg" Color="#154A93"/>
    <SolidColorBrush x:Key="Office2013HighlightedForegroundBrush" Color="DarkBlue"/>
    <SolidColorBrush x:Key="Office2013Brush" Color="Transparent"/>
    <SolidColorBrush x:Key="Office2013ForegroundBrush" Color="#FF333333"/>
    <SolidColorBrush x:Key="Office2013BorderBrush" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="Office2007Blue.WindowBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Office2007Blue.FloatHeaderBorderBrush" Color="#FF8DB2E3"/>
    <SolidColorBrush x:Key="Office2007Blue.FloatHeaderBackground" Color="#FFB8CFE9"/>
    <SolidColorBrush x:Key="Office2007Blue.FloatWindowHeaderForeground" Color="#000000"/>
    <SolidColorBrush x:Key="Office2007Blue.FloatWindowBorderBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="Office2007Blue.FloatWindowBorderBrushInactive" Color="Transparent"/>
    <SolidColorBrush x:Key="Office2007Blue.FloatHeaderMiddleBackground" Color="Transparent"/>
    <SolidColorBrush x:Key="ButtonPathBrushKey" Color="#FF7F7F7F"/>
    <SolidColorBrush x:Key="borderTop" Color="#FFDEDEDE"/>
    <SolidColorBrush x:Key="borderWrap" Color="#FF595959"/>
    <LinearGradientBrush x:Key="Office2007Blue.FloatHeaderMiddleBackgroundInactive" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#E0E2E2" Offset="0.0"/>
        <GradientStop Color="#E8EFF7" Offset="0.25"/>
        <GradientStop Color="#E6E9ED" Offset="0.3"/>
        <GradientStop Color="#DEE5E8" Offset="1"/>
    </LinearGradientBrush>
    <Geometry x:Key="ToolBarCheckmark">
        M 0,2.5 L 2.5,5 L 7,0.5
    </Geometry>
    
    <!-- Close button part -->

    <Style x:Key="NewFloatWindowCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource FloatingWindowsCloseForegroundBrush}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="brdBack" Height="20" Width="20" Margin="0,0,0,0" BorderThickness="1"
                  Background="{TemplateBinding Control.Background}" BorderBrush="Transparent">
                        <Path Name="pathButton" SnapsToDevicePixels="false" Stretch="Fill" StrokeThickness="1.5"
                  Stroke="{TemplateBinding Control.Foreground}" Data="M 109,51 L 216,142 M 215,52 L 109,142 "
                  HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="10"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="brdBack" Property="UIElement.Opacity" Value="0.4"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="pathButton" Value="{DynamicResource FloatingWindowsCloseMouseoverForegroundBrush}" Property="Shape.Stroke"/>
                            <Setter TargetName="brdBack" Value="{DynamicResource FloatingWindowsCloseMouseoverBackgroundBrush}" Property="Border.Background"/>
                        </Trigger>
                        <DataTrigger Value="True"
                            Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:FloatWindowBorder}}}">
                            <Setter TargetName="pathButton" Value="{StaticResource Office2013ForegroundBrush}" Property="Shape.Stroke"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                              Value="True"/>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="pathButton" Value="{StaticResource MetroForegroundBrush}" Property="Shape.Stroke"/>
                            <!--<Setter TargetName="brdBack" Value="OrangeRed" Property="Border.Background"/>-->
                        </MultiDataTrigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Close button part end -->

    <!-- ContextMenu part -->

    <Style x:Key="NewCustomMenuItemStyle" TargetType="{x:Type syncfusion:CustomMenuItem}">
        <Setter Property="Control.HorizontalContentAlignment"
               Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
        <Setter Property="Control.VerticalContentAlignment"
               Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.Foreground" Value="#FF333333"/>
        <Setter Property="Control.FontSize" Value="12"/>
        <Setter Property="Control.FontFamily" Value="{StaticResource MetroFontFamily}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type syncfusion:CustomMenuItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1,0,0">
                        <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}"
                       Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="0" RadiusX="0" RadiusY="0"/>
                        <Rectangle x:Name="InnerBorder" Margin="1" RadiusX="2" RadiusY="2"/>
                        <Grid Margin="-1,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="37"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="17"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" Margin="1,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Border x:Name="GlyphPanel" CornerRadius="0" Margin="3,1,6,1" Width="16" Height="16" Visibility="Hidden"
                      BorderBrush="Transparent"
                      Background="{StaticResource PopupBackgroundBrush}" BorderThickness="1">
                                <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight"
                      SnapsToDevicePixels="true" Stroke="{StaticResource XComponentFontBrush}"
                      StrokeThickness="1.6" Data="{StaticResource ToolBarCheckmark}" Height="8" Stretch="Fill"
                      Width="9"/>
                            </Border>
                            <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}"
                         Margin="{TemplateBinding Control.Padding}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Fill"/>
                            <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Stroke"/>
                            <Setter Property="Control.Foreground" Value="{StaticResource XComponentFontBrush}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="UIElement.Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                <Setter Property="Control.Padding" Value="7,2,8,3"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:CustomMenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder" RadiusX="0" RadiusY="0"/>
                                <Rectangle Name="Bg" Margin="1" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="0" RadiusX="0" RadiusY="0"/>
                                <Rectangle x:Name="InnerBorder" Margin="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon" Margin="4,0,8,0" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel" Grid.Column="0" Visibility="Collapsed" Width="16" Height="16" CornerRadius="0"
                          BorderBrush="{StaticResource Office2013BorderBrush}"
                          Background="{StaticResource Office2013PanelBackgroundBrush}" BorderThickness="1">
                                        <Path Stroke="Black" StrokeThickness="1.4">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                                                    <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Border>
                                    <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </DockPanel>
                                <Popup x:Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="true"
                       Placement="Bottom" Focusable="false"
                       PopupAnimation="{StaticResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <themes:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                                        <Border Background="{StaticResource Office2013PanelBackgroundBrush}"
                            BorderBrush="{StaticResource Office2013BorderBrush}" BorderThickness="1"
                            Grid.IsSharedSizeScope="true">
                                            <Grid Margin="0,0,0,0" IsSharedSizeScope="true">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Border BorderBrush="{StaticResource Office2013BorderBrush}" Grid.Column="0" Grid.ColumnSpan="1"
                                Background="Transparent" BorderThickness="0,0,1,0"/>
                                                <ScrollViewer CanContentScroll="true" Grid.ColumnSpan="2"
                                      Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                          Margin="2,1,2,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                                </ScrollViewer>
                                            </Grid>
                                        </Border>
                                    </themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                                    <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                                </Trigger>
                                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                                    <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw" Property="themes:SystemDropShadowChrome.Color" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                                    <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Stroke"/>
                                    <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Fill"/>
                                    <Setter Property="Control.Foreground" Value="{StaticResource XComponentFontBrush}"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                                    <!--<Setter TargetName="Bg" Value="{StaticResource ButtonBorderBrush.Office2003}" Property="Shape.Stroke"/>
                                    <Setter TargetName="Bg" Value="{StaticResource Office2013HoverBrush}" Property="Shape.Fill"/>-->
                                </Trigger>
                                <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
                                    <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Stroke"/>
                                    <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Fill"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="false">
                                    <Setter Property="UIElement.Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                <Setter Property="Control.Padding" Value="7,3,8,3"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:CustomMenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder" RadiusX="0" RadiusY="0"/>
                                <Rectangle Name="Bg" Margin="0,1,0,0" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="0" RadiusX="0" RadiusY="0"/>
                                <Rectangle x:Name="InnerBorder" Margin="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon" Margin="4,0,10,0" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel" Grid.Column="0" Width="16" Height="16" CornerRadius="0" Visibility="Hidden"
                          BorderBrush="{StaticResource Office2013BorderBrush}"
                          Background="{StaticResource Office2013PanelBackgroundBrush}" BorderThickness="1">
                                        <Path Stroke="Black" StrokeThickness="1.4">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                                                    <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Border>
                                    <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                                    <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Stroke"/>
                                    <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Fill"/>
                                    <Setter Property="Control.Foreground" Value="{StaticResource XComponentFontBrush}"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                                    <!--<Setter TargetName="Bg" Value="{StaticResource ButtonBorderBrush.Office2003}" Property="Shape.Stroke"/>
                                    <Setter TargetName="Bg" Value="{StaticResource Office2013HoverBrush}" Property="Shape.Fill"/>-->
                                    <Setter Property="Control.Foreground" Value="{StaticResource XComponentFontBrush}"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="false">
                                    <Setter Property="UIElement.Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                <Setter Property="Control.Padding" Value="2,4,2,3"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:CustomMenuItem}">
                            <Grid SnapsToDevicePixels="true" Margin="0,1,0,0">
                                <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="0" RadiusX="0" RadiusY="0"/>
                                <Rectangle x:Name="InnerBorder" Margin="1" Stroke="Transparent" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="37"/>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon" Margin="3,0,8,0" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel" CornerRadius="0" Margin="1" Width="16" Height="16" Visibility="Hidden"
                          BorderBrush="{StaticResource Office2013BorderBrush}"
                          Background="{StaticResource Office2013PanelBackgroundBrush}" BorderThickness="1">
                                        <Path Stroke="Black" StrokeThickness="1.4">
                                            <Path.Data>
                                                <GeometryGroup>
                                                    <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                                                    <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                                                </GeometryGroup>
                                            </Path.Data>
                                        </Path>
                                    </Border>
                                    <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                    RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}"
                             Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed"/>
                                    <Path Grid.Column="5" VerticalAlignment="Center" Margin="4,0,6,0"
                        Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource RightArrow}"/>
                                </Grid>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Right" VerticalOffset="-3"
                       HorizontalOffset="-2" Focusable="false"
                       PopupAnimation="{StaticResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <themes:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                                        <Border Background="{StaticResource Office2013PanelBackgroundBrush}"
                            BorderBrush="{StaticResource Office2013BorderBrush}" BorderThickness="1"
                            Grid.IsSharedSizeScope="true">
                                            <Grid Margin="0,0,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Border BorderBrush="{StaticResource Office2013BorderBrush}" Background="Transparent"
                                BorderThickness="0,0,1,0"/>
                                                <ScrollViewer CanContentScroll="true" Grid.ColumnSpan="2"
                                      Style="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                          Margin="2,1,2,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                                </ScrollViewer>
                                            </Grid>
                                        </Border>
                                    </themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                                    <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                                </Trigger>
                                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                                    <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw" Property="themes:SystemDropShadowChrome.Color" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                                    <Setter Property="Control.Foreground" Value="{StaticResource XComponentFontBrush}"/>
                                    <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Fill"/>
                                    <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Stroke"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="false">
                                    <Setter Property="UIElement.Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuItem">
                <Setter Property="Control.Padding" Value="2,4,2,3"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                      Value="false">
                <Setter Property="Control.Padding" Value="16,9,16,9"/>
            </DataTrigger>            
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource NewCustomMenuItemStyle}"
            TargetType="{x:Type syncfusion:CustomMenuItem}"/>

    <Style x:Key="NewCustomContextMenuStyle2" TargetType="{x:Type syncfusion:CustomMenuItem}">
        <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
        <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource Blend.TabForeground}"/>
        <Setter Property="Control.Padding" Value="8,3,8,3"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="36"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="17"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Name="Bg" Fill="{StaticResource PopupBackgroundBrush}"
                         Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" Grid.ColumnSpan="4"/>
                            <ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Path Name="Glyph" Width="9" Margin="3,3,0,3" Grid.Column="0" Height="11" Visibility="Collapsed"
                    Fill="{StaticResource ForegroundBrush.Blend}" FlowDirection="LeftToRight"
                    Data="{StaticResource Checkmark}"/>
                            <ContentPresenter Grid.Column="1" ContentSource="Header"  Margin="{TemplateBinding Control.Padding}"
                                RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <TextBlock Grid.Column="2" Text="{TemplateBinding MenuItem.InputGestureText}"
                         Margin="{TemplateBinding Control.Padding}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="Glyph" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Bg" Value="{StaticResource XComponentHighlightBrush}" Property="Shape.Fill"/>
                            <Setter Property="Control.Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="UIElement.Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                <Setter Property="Control.Padding" Value="7,2,8,3"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"
                        Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight"
                        Data="{StaticResource Checkmark}"/>
                                    <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </DockPanel>
                                <Popup x:Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="true"
                       Placement="Bottom" Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <themes:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Red">
                                        <ContentControl Name="SubMenuBorder" Template="{StaticResource SubmenuContentBlend}" IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                                <ItemsPresenter Margin="0" KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                                    <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                                </Trigger>
                                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                                    <Setter TargetName="OuterBorder" Value="{StaticResource MenuItemPressedBrush.Blend}" Property="Shape.Fill"/>
                                    <Setter Property="Control.Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                                    <Setter TargetName="OuterBorder" Value="{StaticResource MenuItemPressedBrush.Blend}" Property="Shape.Fill"/>
                                    <Setter Property="Control.Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="false">
                                    <Setter Property="UIElement.Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                <Setter Property="Control.Padding" Value="7,2,8,3"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"
                        Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight"
                        Data="{StaticResource Checkmark}"/>
                                    <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                                    <Setter TargetName="OuterBorder" Value="{StaticResource MenuItemPressedBrush.Blend}" Property="Shape.Fill"/>
                                    <Setter Property="Control.Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                                    <Setter TargetName="OuterBorder" Value="{StaticResource MenuItemPressedBrush.Blend}" Property="Shape.Fill"/>
                                    <Setter Property="Control.Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="false">
                                    <Setter Property="UIElement.Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                <Setter Property="Control.Padding" Value="8,3,8,3"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="12" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition Width="17"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" Grid.ColumnSpan="4" Margin="1,0"/>
                                <ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                <Path Name="Glyph" Width="9" Height="11" Margin="3,3,0,3" Visibility="Collapsed"
                      Fill="{StaticResource ForegroundBrush.Blend}" FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}" Grid.Column="0"/>
                                <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                  RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                <Path Grid.Column="3" VerticalAlignment="Center" Margin="4,0,6,0"
                      Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource RightArrow}"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Right" VerticalOffset="-3"
                       HorizontalOffset="-2" Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <themes:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                                        <ContentControl Name="SubMenuBorder" Template="{StaticResource SubmenuContentBlend}" IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                                <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                                    <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                                </Trigger>
                                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsChecked" Value="true">
                                    <Setter TargetName="Glyph" Property="UIElement.Visibility" Value="Visible"/>
                                    <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                                    <Setter TargetName="Bg" Value="{StaticResource MenuItemPressedBrush.Blend}" Property="Shape.Fill"/>
                                    <Setter Property="Control.Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="false">
                                    <Setter Property="UIElement.Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuItem">
                <Setter Property="Control.Padding" Value="8,3,8,3"/>
            </Trigger>            
        </Style.Triggers>
    </Style>
    
    <Style x:Key="NewCustomContextMenuStyle" TargetType="{x:Type syncfusion:CustomContextMenu}">
        <Setter Property="Control.Background" Value="{StaticResource PopupBackgroundBrush}"/>
        <Setter Property="Control.FontFamily" Value="{StaticResource MetroFontFamily}"/>
        <!--<Setter Property="Control.FontStyle" Value="{StaticResource {x:Static SystemFonts.MenuFontStyleKey}}"/>-->
        <!--<Setter Property="Control.FontWeight" Value="{StaticResource {x:Static SystemFonts.MenuFontWeightKey}}"/>-->
        <Setter Property="Control.Foreground" Value="{StaticResource XComponentFontBrush}"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.BorderBrush" Value="Transparent"/>
        <Setter Property="Control.Padding" Value="1"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="ContextMenu.HasDropShadow" Value="{StaticResource {x:Static SystemParameters.DropShadowKey}}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <themes:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent" UIElement.SnapsToDevicePixels="true">
                        <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border Background="Transparent" BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="0,0,1,0"/>
                                <ScrollViewer CanContentScroll="true" Grid.ColumnSpan="2" Margin="1,0" HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter Margin="{TemplateBinding Control.Padding}" KeyboardNavigation.DirectionalNavigation="Cycle"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </themes:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ContextMenu.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Property="themes:SystemDropShadowChrome.Color" Value="#71000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource NewCustomContextMenuStyle}"
            TargetType="{x:Type syncfusion:CustomContextMenu}"/>

    <Style x:Key="RowDefinitionStyle" TargetType="{x:Type RowDefinition}">
        <Setter Property="RowDefinition.Height" Value="25"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=UseNativeFloatWindow, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                      Value="True">
                <Setter Property="RowDefinition.Height" Value="22"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                      Value="True">
                <Setter Property="RowDefinition.Height" Value="35"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Docking header part -->

    <ControlTemplate x:Key="NewDefaultStyle" TargetType="{x:Type syncfusion:DockHeaderPresenter}">
        <Border x:Name="borderTop" Width="Auto" Height="Auto"
            BorderBrush="{StaticResource Office2007Blue.BrushHeader}" BorderThickness="1.5"
            Background="{StaticResource Office2007Blue.BrushHeader}">
            <FrameworkElement.ContextMenu>
                <syncfusion:CustomContextMenu Name="PART_ContextMenu" Focusable="false" 
                                              Style="{StaticResource NewCustomContextMenuStyle}"
                                              ItemContainerStyle="{StaticResource NewCustomMenuItemStyle}"/>
            </FrameworkElement.ContextMenu>
            <Grid>
                <DockPanel LastChildFill="true">
                    <ToggleButton Name="PART_CloseButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Command="syncfusion:DockHeaderPresenter.CloseCommand" Margin="0,0,0,0"
                        Template="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.CloseButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="tooltip">
                                <TextBlock Name="PART_CloseButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=CloseButtonTooltipText}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ToggleButton Name="PART_AwlButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Command="syncfusion:DockHeaderPresenter.ChangeAwlStateCommand"
                        Foreground="{StaticResource Office2007Blue.AwlKeyImg}"
                        Template="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.AwlButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="PART_AwlButtonTooltip">
                                <TextBlock Name="PART_AwlButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=AwlButtonTooltipText}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ToggleButton Name="PART_ContextMenuButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Command="syncfusion:DockHeaderPresenter.OpenContextMenuCommand"
                        Foreground="{StaticResource Office2007Blue.FlatKeyColor}"
                        IsChecked="{Binding Path=IsContextMenuOpen, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DockHeaderPresenter}}}"
                        Template="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.MenuButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="PART_ContextMenuButtonTooltip">
                                <TextBlock Name="PART_ContextMenuButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=ContextMenuButtonTooltipText}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ToggleButton Name="PART_MaximizeButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Visibility="Collapsed" Command="syncfusion:DockHeaderPresenter.MaximizeStateCommand"
                        Foreground="{StaticResource Office2007Blue.FlatKeyColor}"
                        Template="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.MaximizeButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="PART_MaximizeButtonTooltip">
                                <TextBlock Name="PART_MaximizeButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=Maximize}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ToggleButton Name="PART_RestoreButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Visibility="Collapsed" Command="syncfusion:DockHeaderPresenter.RestoreStateCommand"
                        Foreground="{StaticResource Office2007Blue.FlatKeyColor}"
                        Template="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.RestoreButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="PART_RestoreButtonTooltip">
                                <TextBlock Name="PART_RestoreButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=Restore}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ToggleButton Name="PART_MinimizeButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Visibility="Collapsed" Command="syncfusion:DockHeaderPresenter.MinimizeStateCommand"
                        Foreground="{StaticResource Office2007Blue.FlatKeyColor}"
                        Template="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.MinimizeButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="PART_MinimizeButtonTooltip">
                                <TextBlock Name="PART_MinimizeButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=Minimize}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ContentPresenter Name="PART_ContentPresenter" IsHitTestVisible="true" Margin="4,2,2,2" VerticalAlignment="Center"
                            TextBlock.Foreground="{StaticResource Office2007Blue.FlatKeyColor}"
                            ContentTemplateSelector="{StaticResource DockTrimmingTemplate}"
                            Content="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.Header), RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplate="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.HeaderTemplate), RelativeSource={RelativeSource TemplatedParent}}"/>
                </DockPanel>
                <Border Name="CoverletControl" Visibility="Collapsed" Background="Transparent"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Value="True"
                      Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}">
                <Setter Property="Control.FontSize" Value="18"/>
            </DataTrigger>
            <DataTrigger Value="false"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMaximizeMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="false"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMinimizeMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}">
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMaximizeMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=MinimizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}">
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMinimizeMenuItem"
                   Value="false"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="false"/>
                    <Condition Binding="{Binding Path=MaximizeButtonMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="Disable"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="true"/>
                    <Condition Binding="{Binding Path=MaximizeButtonMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="Disable"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="true"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMaximizeMenuItem"
                   Value="true"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MinimizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MinimizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMinimizeMenuItem"
                   Value="true"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Collapsed"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMaximizeMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MinimizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MinimizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Collapsed"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMinimizeMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <DataTrigger Value="Collapsed"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.RestoreButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Value="Visible"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.RestoreButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="true"/>
            </DataTrigger>
            <DataTrigger Value="Float"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="AutoHidden"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="10" CenterY="10"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="AutoHidden"/>
                    <Condition Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="17.5" CenterY="17.5"/>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanFloat), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledFloatingMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanDock), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanDocument), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledTabbedMenuItem"
                   Value="false"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.CloseTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="CloseActive"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.CloseTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="CloseAll"/>
                    <Condition Binding="{Binding Path=CanCloseGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockedElementTabbedHost}}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <DataTrigger Value="True"
                      Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockedElementTabbedHost}}}">
                <Setter TargetName="PART_ContentPresenter"
                   Value="{StaticResource Office2007Blue.DockedElementTabbedHostFocusedForeground}"
                   Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop" Value="{StaticResource Office2007Blue.DockedElementTabbedHostFocused}"
                   Property="Border.Background"/>
            </DataTrigger>
            <DataTrigger Value="True"
                      Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="PART_ContentPresenter"
                   Value="{StaticResource Office2007Blue.DockedElementTabbedHostFocusedForeground}"
                   Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop" Value="{StaticResource Office2007Blue.DockedElementTabbedHostFocused}"
                   Property="Border.Background"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=AutoHideVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.IsDragging), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CoverletControl" Property="UIElement.Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=AutoHideTabsMode, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="AutoHideGroup"/>
                    <Condition Binding="{Binding Path=CanAutoHideGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockedElementTabbedHost}}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <Trigger Property="UIElement.Visibility" Value="Collapsed">
                <Setter TargetName="PART_ContentPresenter" Value="{x:Null}" Property="ContentPresenter.Content"/>
            </Trigger>
            <Trigger SourceName="borderTop" Property="UIElement.Visibility" Value="Visible">
                <Setter TargetName="PART_ContentPresenter"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderForeground), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderBackground), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.Background"/>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.BorderBrush"/>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderBorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.BorderThickness"/>
                <Setter TargetName="PART_AwlButton"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderForeground), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
                <Setter TargetName="PART_ContextMenuButton"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderForeground), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
                <Setter TargetName="PART_CloseButton"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderForeground), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
            </Trigger>
            <DataTrigger Value="True"
                      Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="PART_ContentPresenter"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderForegroundSelected), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.SelectedHeaderBackground), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.Background"/>
                <Setter TargetName="PART_AwlButton"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderForegroundSelected), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
                <Setter TargetName="PART_ContextMenuButton"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderForegroundSelected), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
                <Setter TargetName="PART_CloseButton"
                   Value="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.HeaderForegroundSelected), RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderMouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.Background"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockedElementTabbedHost}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=IsEnableHotTracking, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderMouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.Background"/>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="NewNativeStyle" TargetType="{x:Type syncfusion:DockHeaderPresenter}">
        <Border x:Name="borderTop" Width="Auto" Height="Auto"
            BorderBrush="{StaticResource Office2007Blue.BrushHeader}" BorderThickness="1.5"
            Background="{StaticResource Office2007Blue.BrushHeader}">
            <FrameworkElement.ContextMenu>
                <syncfusion:CustomContextMenu Name="PART_ContextMenu" Focusable="false"
                                              Style="{StaticResource NewCustomContextMenuStyle}"
                                              ItemContainerStyle="{StaticResource NewCustomMenuItemStyle}"/>
            </FrameworkElement.ContextMenu>
            <Grid>
                <DockPanel LastChildFill="true">
                    <ToggleButton Name="PART_CloseButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Command="syncfusion:DockHeaderPresenter.CloseCommand" Margin="0,0,0,0"
                        Template="{Binding Path=ElementHost.DockingManager.CloseButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="tooltip">
                                <TextBlock Name="PART_CloseButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=CloseButtonTooltipText}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ToggleButton Name="PART_AwlButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Command="syncfusion:DockHeaderPresenter.ChangeAwlStateCommand"
                        Foreground="{StaticResource Office2007Blue.AwlKeyImg}"
                        Template="{Binding Path=ElementHost.DockingManager.AwlButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="PART_AwlButtonTooltip">
                                <TextBlock Name="PART_AwlButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=AwlButtonTooltipText}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ToggleButton Name="PART_ContextMenuButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Command="syncfusion:DockHeaderPresenter.OpenContextMenuCommand"
                        Foreground="{StaticResource Office2007Blue.FlatKeyColor}"
                        IsChecked="{Binding Path=IsContextMenuOpen, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DockHeaderPresenter}}}"
                        Template="{Binding Path=ElementHost.DockingManager.MenuButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="PART_ContextMenuButtonTooltip">
                                <TextBlock Name="PART_ContextMenuButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=ContextMenuButtonTooltipText}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ToggleButton Name="PART_MaximizeButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Visibility="Collapsed" Command="syncfusion:DockHeaderPresenter.MaximizeStateCommand"
                        Foreground="{StaticResource Office2007Blue.FlatKeyColor}"
                        Template="{Binding Path=ElementHost.DockingManager.MaximizeButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="PART_MaximizeButtonTooltip">
                                <TextBlock Name="PART_MaximizeButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=Maximize}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ToggleButton Name="PART_RestoreButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Visibility="Collapsed" Command="syncfusion:DockHeaderPresenter.RestoreStateCommand"
                        Foreground="{StaticResource Office2007Blue.FlatKeyColor}"
                        Template="{Binding Path=ElementHost.DockingManager.RestoreButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="PART_RestoreButtonTooltip">
                                <TextBlock Name="PART_RestoreButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=Restore}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ToggleButton Name="PART_MinimizeButton" DockPanel.Dock="Right" Focusable="false" VerticalAlignment="Center"
                        Visibility="Collapsed" Command="syncfusion:DockHeaderPresenter.MinimizeStateCommand"
                        Foreground="{StaticResource Office2007Blue.FlatKeyColor}"
                        Template="{Binding Path=ElementHost.DockingManager.MinimizeButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        <FrameworkElement.ToolTip>
                            <ToolTip Name="PART_MinimizeButtonTooltip">
                                <TextBlock Name="PART_MinimizeButtonTooltipText" Style="{StaticResource {x:Type TextBlock}}"
                           Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=Minimize}"/>
                            </ToolTip>
                        </FrameworkElement.ToolTip>
                    </ToggleButton>
                    <ContentPresenter Name="PART_ContentPresenter" IsHitTestVisible="true" Margin="4,2,2,2" VerticalAlignment="Center"
                            TextBlock.Foreground="{StaticResource Office2007Blue.FlatKeyColor}"
                            ContentTemplateSelector="{StaticResource DockTrimmingTemplate}"
                            Content="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.Header), RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplate="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.HeaderTemplate), RelativeSource={RelativeSource TemplatedParent}}"/>
                </DockPanel>
                <Border Name="CoverletControl" Visibility="Collapsed" Background="Transparent"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Value="True"
                      Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}">
                <Setter Property="Control.FontSize" Value="18"/>
            </DataTrigger>
            <DataTrigger Value="false"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMaximizeMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="false"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMinimizeMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}">
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMaximizeMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=MinimizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}">
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMinimizeMenuItem"
                   Value="false"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="false"/>
                    <Condition Binding="{Binding Path=MaximizeButtonMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="Disable"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="true"/>
                    <Condition Binding="{Binding Path=MaximizeButtonMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="Disable"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="true"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMaximizeMenuItem"
                   Value="true"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MinimizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MinimizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMinimizeMenuItem"
                   Value="true"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MaximizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Collapsed"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMaximizeMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=MinimizeButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.MinimizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="Collapsed"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledMinimizeMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <DataTrigger Value="Collapsed"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.RestoreButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Value="Visible"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.RestoreButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="true"/>
            </DataTrigger>
            <DataTrigger Value="Float"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="AutoHidden"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="10" CenterY="10"/>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="AutoHidden"/>
                    <Condition Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="17.5" CenterY="17.5"/>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanFloat), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledFloatingMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanDock), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanDocument), RelativeSource={RelativeSource TemplatedParent}}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledTabbedMenuItem"
                   Value="false"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.CloseTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="CloseActive"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.CloseTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="CloseAll"/>
                    <Condition Binding="{Binding Path=CanCloseGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockedElementTabbedHost}}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <DataTrigger Value="True"
                      Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockedElementTabbedHost}}}">
                <Setter TargetName="PART_ContentPresenter"
                   Value="{StaticResource Office2007Blue.DockedElementTabbedHostFocusedForeground}"
                   Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop" Value="{StaticResource Office2007Blue.DockedElementTabbedHostFocused}"
                   Property="Border.Background"/>
            </DataTrigger>
            <DataTrigger Value="True"
                      Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="PART_ContentPresenter"
                   Value="{StaticResource Office2007Blue.DockedElementTabbedHostFocusedForeground}"
                   Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop" Value="{StaticResource Office2007Blue.DockedElementTabbedHostFocused}"
                   Property="Border.Background"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=AutoHideVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}">
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.DockingManager).(syncfusion:DockingManager.IsDragging), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CoverletControl" Property="UIElement.Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=AutoHideTabsMode, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="AutoHideGroup"/>
                    <Condition Binding="{Binding Path=CanAutoHideGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockedElementTabbedHost}}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                    <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}"
                        Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="UIElement.Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </MultiDataTrigger>
            <Trigger Property="UIElement.Visibility" Value="Collapsed">
                <Setter TargetName="PART_ContentPresenter" Value="{x:Null}" Property="ContentPresenter.Content"/>
            </Trigger>
            <Trigger SourceName="borderTop" Property="UIElement.Visibility" Value="Visible">
                <Setter TargetName="PART_ContentPresenter"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.Background"/>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.BorderBrush"/>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderBorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.BorderThickness"/>
                <Setter TargetName="PART_AwlButton"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
                <Setter TargetName="PART_ContextMenuButton"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
                <Setter TargetName="PART_CloseButton"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
            </Trigger>
            <DataTrigger Value="True"
                      Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="PART_ContentPresenter"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderForegroundSelected, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="TextBlock.Foreground"/>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=ElementHost.DockingManager.SelectedHeaderBackground, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.Background"/>
                <Setter TargetName="PART_AwlButton"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderForegroundSelected, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
                <Setter TargetName="PART_ContextMenuButton"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderForegroundSelected, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
                <Setter TargetName="PART_CloseButton"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderForegroundSelected, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Control.Foreground"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockedElementTabbedHost}}}"
                        Value="True"/>
                    <Condition Binding="{Binding Path=IsEnableHotTracking, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                        Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="borderTop"
                   Value="{Binding Path=ElementHost.DockingManager.HeaderMouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"
                   Property="Border.Background"/>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="NewDockHeaderPresenterStyle" TargetType="{x:Type syncfusion:DockHeaderPresenter}">
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="FrameworkElement.MinHeight" Value="17"/>
        <Style.Triggers>
            <Trigger Property="syncfusion:DockHeaderPresenter.UseNativeFloatWindow" Value="true">
                <Setter Property="Control.Template" Value="{StaticResource NewNativeStyle}"/>
            </Trigger>
            <Trigger Property="syncfusion:DockHeaderPresenter.UseNativeFloatWindow" Value="false">
                <Setter Property="Control.Template" Value="{StaticResource NewDefaultStyle}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Header" TargetType="{x:Type ContentControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Name="borderTop" BorderBrush="{StaticResource borderTop}">
                        <Border Name="borderWrap" BorderBrush="{StaticResource borderWrap}">
                            <FrameworkElement.ContextMenu>
                                <syncfusion:CustomContextMenu Name="PART_ContextMenu" Focusable="false"/>
                            </FrameworkElement.ContextMenu>
                            <DockPanel Name="MiddleHdrImg" Margin="0,0,0,0" LastChildFill="true"
                         Background="{StaticResource Office2007Blue.FloatHeaderMiddleBackground}">
                                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                    <ToggleButton x:Name="Restorebutton" WindowChrome.IsHitTestVisibleInChrome="true"
                                Style="{StaticResource N_RestoreButton}" Margin="0,4,2,0" Padding="0"
                                Command="syncfusion:NativeFloatWindow.RestoreCommand"/>
                                    <ToggleButton x:Name="m_button" WindowChrome.IsHitTestVisibleInChrome="true"
                                Style="{StaticResource N_MaximizeButton}" Margin="0,4,2,0" Padding="0"
                                Command="syncfusion:NativeFloatWindow.MaximizeCommand"/>
                                    <Button Name="button" WindowChrome.IsHitTestVisibleInChrome="true"
                          Style="{StaticResource NewFloatWindowCloseButtonStyle}" Margin="0,1,2,0" Padding="0"
                          DockPanel.Dock="Right" Command="syncfusion:NativeFloatWindow.CloseCommand">
                                        <FrameworkElement.ToolTip>
                                            <ToolTip Name="tooltip">
                                                <TextBlock Name="tooltipText"
                                   Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=CloseButtonTooltipText}"/>
                                            </ToolTip>
                                        </FrameworkElement.ToolTip>
                                    </Button>
                                </StackPanel>
                                <ContentPresenter Name="contentWraper" VerticalAlignment="Center" DockPanel.Dock="Left"
                                  TextBlock.Foreground="{StaticResource Office2007Blue.FloatWindowHeaderForeground}"
                                  IsHitTestVisible="true" Margin="2,0,0,0"
                                  Content="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.Header), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                                  ContentTemplate="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.HeaderTemplate), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"/>
                            </DockPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(syncfusion:NativeFloatWindow.MaximizeButtonEnabled), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                              Value="True"/>
                                <Condition Binding="{Binding Path=(syncfusion:NativeFloatWindow.WindowState), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                              Value="Maximized"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="m_button" Property="UIElement.Visibility" Value="Collapsed"/>
                            <Setter TargetName="Restorebutton" Property="UIElement.Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(syncfusion:NativeFloatWindow.MaximizeButtonEnabled), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                              Value="True"/>
                                <Condition Binding="{Binding Path=(syncfusion:NativeFloatWindow.WindowState), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                              Value="Normal"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="m_button" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Restorebutton" Property="UIElement.Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                        <DataTrigger Value="False"
                            Binding="{Binding Path=(syncfusion:NativeFloatWindow.MaximizeButtonEnabled), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}">
                            <Setter TargetName="m_button" Property="UIElement.Visibility" Value="Collapsed"/>
                            <Setter TargetName="Restorebutton" Property="UIElement.Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Value="False"
                            Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanDocument), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}">
                            <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledTabbedMenuItem"
                         Value="false"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanClose), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                              Value="False"/>
                                <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                              Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                         Value="false"/>
                            <Setter TargetName="button" Property="UIElement.IsEnabled" Value="false"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(syncfusion:NativeFloatWindow.DockingManager).(syncfusion:DockingManager.CloseTabs), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                              Value="CloseActive"/>
                                <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanClose), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                              Value="False"/>
                                <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                              Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                         Value="false"/>
                            <Setter TargetName="button" Property="UIElement.IsEnabled" Value="false"/>
                        </MultiDataTrigger>
                        <DataTrigger Value="True"
                            Binding="{Binding Path=(PrimaryElement).(syncfusion:DockingManager.NoHeader), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}">
                            <Setter TargetName="PART_ContextMenu" Property="UIElement.Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Value="True"
                            Binding="{Binding Path=IsMultiHostsContainer, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}">
                            <Setter TargetName="contentWraper" Property="UIElement.Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Value="False"
                            Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}">
                            <Setter TargetName="MiddleHdrImg" Property="Panel.Background" Value="Red"/>
                        </DataTrigger>
                        <Trigger SourceName="MiddleHdrImg" Property="UIElement.Visibility" Value="Visible">
                            <Setter TargetName="MiddleHdrImg"
                         Value="{Binding Path=(syncfusion:NativeFloatWindow.DockingManager).(syncfusion:DockingManager.FloatWindowHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                         Property="Panel.Background"/>
                            <Setter TargetName="contentWraper"
                         Value="{Binding Path=(syncfusion:NativeFloatWindow.DockingManager).(syncfusion:DockingManager.FloatWindowHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                         Property="TextBlock.Foreground"/>
                        </Trigger>
                        <DataTrigger Value="True"
                            Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:NativeFloatWindow}}}">
                            <Setter TargetName="MiddleHdrImg"
                         Value="{Binding Path=(syncfusion:NativeFloatWindow.DockingManager).(syncfusion:DockingManager.FloatWindowSelectedHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                         Property="Panel.Background"/>
                            <Setter TargetName="contentWraper"
                         Value="{Binding Path=(syncfusion:NativeFloatWindow.DockingManager).(syncfusion:DockingManager.FloatWindowSelectedHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:NativeFloatWindow}}}"
                         Property="TextBlock.Foreground"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NewNativeWindowStyle" TargetType="{x:Type syncfusion:NativeFloatWindow}">
        <Setter Property="Window.WindowStyle" Value="None"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome ResizeBorderThickness="7" CornerRadius="0" CaptionHeight="20" GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type syncfusion:NativeFloatWindow}">
                    <AdornerDecorator x:Name="Ad">
                        <DockPanel Focusable="false" LastChildFill="true">
                            <Border Name="FloatWindowOutBorder" Focusable="false"
                      BorderBrush="{StaticResource Office2013BorderBrush}" BorderThickness="1"
                      Background="{StaticResource Office2007Blue.WindowBackground}">
                                <Grid Focusable="false">
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="TopRow" Style="{StaticResource RowDefinitionStyle}"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition x:Name="BottomRow" Height="4"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="LeftCol" Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition x:Name="RightCol" Width="4"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentControl Name="BorderLeftTop" Focusable="false" Style="{StaticResource LeftTop}" Grid.Column="0"
                                  Grid.Row="0"/>
                                    <Border x:Name="Part_BorderMenu" Grid.Column="1" Grid.Row="0" Background="Transparent" Focusable="false">
                                        <FrameworkElement.ContextMenu>
                                            <syncfusion:CustomContextMenu x:Name="Part_CustomContextMenu" Focusable="false"
                                                    Style="{StaticResource NewCustomContextMenuStyle}"
                                                    ItemContainerStyle="{StaticResource NewCustomMenuItemStyle}"/>
                                        </FrameworkElement.ContextMenu>
                                    </Border>
                                    <ContentControl Name="BorderHeader" Focusable="false" Style="{StaticResource Header}" Grid.Column="1"
                                  Grid.Row="0" Content="{TemplateBinding Window.Title}"/>
                                    <ContentControl Name="BorderRightTop" Focusable="false" Style="{StaticResource RightTop}" Grid.Column="2"
                                  Grid.Row="0"/>
                                    <ContentControl Name="BorderLeft" Focusable="false" Style="{StaticResource Left}" Grid.Column="0" Grid.Row="1"/>
                                    <ContentPresenter Name="ContentPresenter" Grid.Column="1" Grid.Row="1"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    Content="{TemplateBinding ContentControl.Content}"/>
                                    <ContentControl Name="BorderRight" Focusable="false" Style="{StaticResource Right}" Grid.Column="2" Grid.Row="1"/>
                                    <ContentControl Name="BorderLeftBottom" Focusable="false" Style="{StaticResource LeftBottom}" Grid.Column="0"
                                  Grid.Row="2"/>
                                    <ContentControl Name="BorderBottom" Focusable="false" Style="{StaticResource Bottom}" Grid.Column="1"
                                  Grid.Row="2"/>
                                    <ContentControl Name="BorderRightBottom" Focusable="false" Style="{StaticResource RightBottom}" Grid.Column="2"
                                  Grid.Row="2"/>
                                </Grid>
                            </Border>
                        </DockPanel>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource NewNativeWindowStyle}"
            TargetType="{x:Type syncfusion:NativeFloatWindow}"/>
    
    <!-- Tab part -->

    <ControlTemplate x:Key="NewTabItemTemplate" TargetType="{x:Type TabItem}">
        <Grid Name="Transform">
            <syncfusion:ContextMenuBorder Name="Border" Margin="2" Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
                <FrameworkElement.ContextMenu>
                    <syncfusion:CustomContextMenu Name="PART_ContextMenu" Focusable="false"
                                                  Style="{StaticResource NewCustomContextMenuStyle}"
                                                  ItemContainerStyle="{StaticResource NewCustomMenuItemStyle}"/>
                </FrameworkElement.ContextMenu>
                <FrameworkElement.LayoutTransform>
                    <RotateTransform Angle="0"/>
                </FrameworkElement.LayoutTransform>
                <DockPanel LastChildFill="true">
                    <Border Name="Icon" DockPanel.Dock="Left" Margin="6,3,2,3" Width="16"
                  Background="{Binding Path=(TabItem.Content).(syncfusion:DockingManager.Icon), RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header"
                            Margin="2,2,4,2" RecognizesAccessKey="true"
                            ContentTemplateSelector="{StaticResource TabItemTrimmingTemplate}" TextBlock.FontSize="{StaticResource XComponentTabHeaderFontSize}"
                            ContentTemplate="{Binding Path=(TabItem.Content).(syncfusion:DockingManager.HeaderTemplate), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"/>
                    <!--<TextBlock x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Header, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                               FontFamily="{StaticResource MetroFontFamily}" FontSize="12"
                            Margin="2,2,4,2"/>-->
                </DockPanel>
            </syncfusion:ContextMenuBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="Icon" Value="{x:Null}" Property="Border.Background">
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
                <Setter TargetName="Border" Property="FrameworkElement.LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="FrameworkElement.Margin" Value="-0.5,-0.5,0.5,0"/>
                <Setter TargetName="ContentSite" Property="FrameworkElement.Margin" Value="2.5,2.5,2.5,2.5"/>
                <Setter TargetName="ContentSite" Property="TextBlock.FontFamily" Value="{StaticResource MetroFontFamily}"/>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
                <Setter TargetName="Border" Property="FrameworkElement.LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="FrameworkElement.Margin" Value="0.5,-0.5,-0.5,0"/>
                <Setter TargetName="ContentSite" Property="FrameworkElement.Margin" Value="2.5,2.5,2.5,2.5"/>
                <Setter TargetName="ContentSite" Property="TextBlock.FontFamily" Value="{StaticResource MetroFontFamily}"/>
            </Trigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(Border.DataContext).(syncfusion:DockingManager.CanClose), ElementName=Border}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="Float"
                      Binding="{Binding Path=(Border.DataContext).(syncfusion:DockingManager.State), ElementName=Border}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(Border.DataContext).(syncfusion:DockingManager.CanFloat), ElementName=Border}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledFloatingMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(Border.DataContext).(syncfusion:DockingManager.CanAutoHide), ElementName=Border}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledAutoHideMenuItem"
                   Value="false"/>
            </DataTrigger>
            <DataTrigger Value="False"
                      Binding="{Binding Path=(Border.DataContext).(syncfusion:DockingManager.CanDocument), ElementName=Border}">
                <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledTabbedMenuItem"
                   Value="false"/>
            </DataTrigger>
            <Trigger Property="TabItem.IsSelected" Value="true">
                <Setter TargetName="ContentSite" Property="Panel.ZIndex" Value="100"/>
                <!--<Setter TargetName="ContentSite" Value="{StaticResource Office2013HighlightedForegroundBrush}" Property="TextBlock.Foreground"/>-->
                <Setter TargetName="Border" Value="{StaticResource Office2013Brush}" Property="Border.Background"/>
                <Setter TargetName="ContentSite" Value="{StaticResource XComponentDockedTabSelectedHeaderBrush}" Property="TextBlock.Background"/>
                <Setter TargetName="Border"  Property="Background" Value="{StaticResource XComponentDockedTabSelectedHeaderBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TabItem.IsMouseOver" Value="true"/>
                    <Condition Property="TabItem.IsSelected" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border"  Property="Background" Value="{StaticResource XComponentHighlightBrush}"/>
            </MultiTrigger>
            <Trigger Property="TabItem.IsSelected" Value="false">
                <Setter TargetName="Border" Property="Border.BorderBrush" Value="Transparent"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="NewTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="HeaderedContentControl.Header" Value="{Binding Path=(syncfusion:DockingManager.Header)}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource Office2013ForegroundBrush}"/>
        <Setter Property="Control.FontSize" Value="14"/>
        <Setter Property="syncfusion:DockingManager.ListenTabItemEvents" Value="true"/>
        <Setter Property="FrameworkElement.MinWidth" Value="21"/>
        <Setter Property="FrameworkElement.MinHeight" Value="21"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="FrameworkElement.Tag" Value="IsInternalTabItem"/>
        <Setter Property="Control.Template" Value="{StaticResource NewTabItemTemplate}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}"
                      Value="True">
                <Setter Property="FrameworkElement.MinHeight" Value="35"/>
                <Setter Property="FrameworkElement.MinWidth" Value="35"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Tab part end -->
    
    <!-- Floating window part -->
    
    <Style x:Key="NewFloatWindowFocusedCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="Control.Foreground" Value="{StaticResource Office2013ForegroundBrush}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="brdBack" Height="20" Width="20" Margin="0,0,0,0" BorderThickness="1"
                  Background="{TemplateBinding Control.Background}" BorderBrush="Transparent">
                        <Path Name="pathButton" SnapsToDevicePixels="false" Stretch="Fill" StrokeThickness="1.5"
                  Stroke="{TemplateBinding Control.Foreground}" Data="M 109,51 L 216,142 M 215,52 L 109,142 "
                  HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="10"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="brdBack" Property="UIElement.Opacity" Value="0.4"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="pathButton" Value="{StaticResource Office2013HoverBrush}" Property="Shape.Stroke"/>
                            <Setter TargetName="brdBack" Value="{StaticResource Office2013IconHovrBrush}"
                         Property="Border.Background"/>
                        </Trigger>
                        <DataTrigger Value="True"
                            Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:FloatWindowBorder}}}">
                            <Setter TargetName="pathButton" Value="{StaticResource Office2013ForegroundBrush}"
                         Property="Shape.Stroke"/>
                        </DataTrigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NewFloatWindowBorderStyle" TargetType="{x:Type syncfusion:FloatWindowBorder}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="syncfusion:FloatWindowBorder.ParentWindow"
               Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"/>
        <Setter Property="syncfusion:FloatWindowBorder.MinWindowWidth" Value="50.0"/>
        <Setter Property="syncfusion:FloatWindowBorder.MinWindowHeight" Value="25"/>
        <Setter Property="FrameworkElement.Height" Value="Auto"/>
        <Setter Property="Control.FontFamily" Value="{StaticResource MetroFontFamily}"/>
        <Setter Property="Control.FontSize" Value="14"/>
        <Setter Property="FrameworkElement.Width" Value="Auto"/>
        <Style.Triggers>
            <Trigger Property="syncfusion:FloatWindowBorder.BorderMode" Value="Header">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:FloatWindowBorder}">
                            <Border Name="borderTop" BorderBrush="{StaticResource borderTop}">
                                <Border Name="borderWrap" BorderBrush="{StaticResource borderWrap}">
                                    <FrameworkElement.ContextMenu>
                                        <syncfusion:CustomContextMenu Name="PART_ContextMenu" Focusable="false"
                                                                      Style="{StaticResource NewCustomContextMenuStyle}"
                                                                      ItemContainerStyle="{StaticResource NewCustomMenuItemStyle}"/>
                                    </FrameworkElement.ContextMenu>
                                    <DockPanel Name="MiddleHdrImg" Margin="0,0,0,0" LastChildFill="true"
                             Background="{StaticResource Office2007Blue.FloatHeaderMiddleBackground}">
                                        <Button Name="button" Style="{StaticResource NewFloatWindowCloseButtonStyle}" Margin="0,1,2,0"
                            Padding="0" DockPanel.Dock="Right" Command="syncfusion:FloatWindowBorder.ChangeStateCommand">
                                            <FrameworkElement.ToolTip>
                                                <ToolTip Name="tooltip">
                                                    <TextBlock Name="tooltipText" Style="{StaticResource {x:Type TextBlock}}"
                                     Text="{Binding Source={StaticResource ResourceWrapperKey}, Path=CloseButtonTooltipText}"/>
                                                </ToolTip>
                                            </FrameworkElement.ToolTip>
                                        </Button>
                                        <ContentPresenter Name="contentWraper" VerticalAlignment="Center"
                                      TextBlock.Foreground="{StaticResource Office2007Blue.FloatWindowHeaderForeground}"
                                      IsHitTestVisible="true" Margin="2,0,0,0"
                                      ContentTemplateSelector="{StaticResource FloatTrimmingTemplate}"
                                      Content="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.Header), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                      ContentTemplate="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.HeaderTemplate), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"/>
                                    </DockPanel>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:DockingManager}}}">
                                    <Setter Property="Control.FontSize" Value="18"/>
                                </DataTrigger>
                                <DataTrigger Value="False"
                                Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanDocument), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledTabbedMenuItem"
                             Value="false"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanClose), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="False"/>
                                        <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                             Value="false"/>
                                    <Setter TargetName="button" Property="UIElement.IsEnabled" Value="false"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.CloseTabs), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="CloseActive"/>
                                        <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockingManager.CanClose), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="False"/>
                                        <Condition Binding="{Binding Path=(syncfusion:DockingManager.InternalDataContext).(syncfusion:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_ContextMenu" Property="syncfusion:CustomContextMenu.IsEnabledHiddenMenuItem"
                             Value="false"/>
                                    <Setter TargetName="button" Property="UIElement.IsEnabled" Value="false"/>
                                </MultiDataTrigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=(PrimaryElement).(syncfusion:DockingManager.NoHeader), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="PART_ContextMenu" Property="UIElement.Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsMultiHostsContainer, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="contentWraper" Property="UIElement.Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <DataTrigger Value="False"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="MiddleHdrImg" Property="Panel.Background" Value="Red"/>
                                </DataTrigger>
                                <Trigger SourceName="MiddleHdrImg" Property="UIElement.Visibility" Value="Visible">
                                    <Setter TargetName="MiddleHdrImg"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.FloatWindowHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Panel.Background"/>
                                    <Setter TargetName="contentWraper"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.FloatWindowHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="TextBlock.Foreground"/>
                                </Trigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="MiddleHdrImg"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.FloatWindowSelectedHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Panel.Background"/>
                                    <Setter TargetName="contentWraper"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.FloatWindowSelectedHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="TextBlock.Foreground"/>
                                    <!--<Setter TargetName="button" Value="{StaticResource NewFloatWindowFocusedCloseButtonStyle}"
                             Property="FrameworkElement.Style"/>-->
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="syncfusion:FloatWindowBorder.BorderMode" Value="LeftTop">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:FloatWindowBorder}">
                            <Border Name="border" Margin="0" BorderThickness="0"
                      BorderBrush="{StaticResource Office2007Blue.FloatHeaderBorderBrush}"
                      Background="{StaticResource Office2007Blue.FloatHeaderMiddleBackground}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="False"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border" Value="{StaticResource Office2007Blue.FloatHeaderMiddleBackgroundInactive}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <Trigger SourceName="border" Property="UIElement.Visibility" Value="Visible">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </Trigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatWindowSelectedTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatWindowSelectedTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="syncfusion:FloatWindowBorder.BorderMode" Value="RightTop">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:FloatWindowBorder}">
                            <Border Name="border" Margin="0" BorderThickness="0"
                      BorderBrush="{StaticResource Office2007Blue.FloatHeaderBorderBrush}"
                      Background="{StaticResource Office2007Blue.FloatHeaderMiddleBackground}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="False"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border" Value="{StaticResource Office2007Blue.FloatHeaderMiddleBackgroundInactive}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <Trigger SourceName="border" Property="UIElement.Visibility" Value="Visible">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.RightFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </Trigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.RightFloatWindowSelectedTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.RightFloatWindowSelectedTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.RightFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="syncfusion:FloatWindowBorder.BorderMode" Value="Left">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:FloatWindowBorder}">
                            <Border Name="border" Margin="0" BorderThickness="0"
                      BorderBrush="{StaticResource Office2007Blue.FloatHeaderBorderBrush}"
                      Background="{StaticResource Office2007Blue.FloatWindowBorderBrush}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="False"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border" Value="{StaticResource Office2007Blue.FloatWindowBorderBrushInactive}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <Trigger SourceName="border" Property="UIElement.Visibility" Value="Visible">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </Trigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatWindowSelectedBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="syncfusion:FloatWindowBorder.BorderMode" Value="Right">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:FloatWindowBorder}">
                            <Border Name="border" Margin="0" BorderThickness="0"
                      BorderBrush="{StaticResource Office2007Blue.FloatHeaderBorderBrush}"
                      Background="{StaticResource Office2007Blue.FloatWindowBorderBrush}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="False"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border" Value="{StaticResource Office2007Blue.FloatWindowBorderBrushInactive}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <Trigger SourceName="border" Property="UIElement.Visibility" Value="Visible">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </Trigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.RightFloatWindowSelectedBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.RightFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.RightFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="syncfusion:FloatWindowBorder.BorderMode" Value="LeftBottom">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:FloatWindowBorder}">
                            <Border Name="border" Margin="0" BorderThickness="0"
                      BorderBrush="{StaticResource Office2007Blue.FloatHeaderBorderBrush}"
                      Background="{StaticResource Office2007Blue.FloatWindowBorderBrush}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="False"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border" Value="{StaticResource Office2007Blue.FloatWindowBorderBrushInactive}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <Trigger SourceName="border" Property="UIElement.Visibility" Value="Visible">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </Trigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatWindowSelectedBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="syncfusion:FloatWindowBorder.BorderMode" Value="Bottom">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:FloatWindowBorder}">
                            <Border Name="border" Margin="0" BorderThickness="0"
                      BorderBrush="{StaticResource Office2007Blue.FloatHeaderBorderBrush}"
                      Background="{StaticResource Office2007Blue.FloatWindowBorderBrush}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="False"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border" Value="{StaticResource Office2007Blue.FloatWindowBorderBrushInactive}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <Trigger SourceName="border" Property="UIElement.Visibility" Value="Visible">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </Trigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatWindowSelectedBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.BottomFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="syncfusion:FloatWindowBorder.BorderMode" Value="RightBottom">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:FloatWindowBorder}">
                            <Border Name="border" Margin="0" BorderThickness="0"
                      BorderBrush="{StaticResource Office2007Blue.FloatHeaderBorderBrush}"
                      Background="{StaticResource Office2007Blue.FloatWindowBorderBrush}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Value="False"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border" Value="{StaticResource Office2007Blue.FloatWindowBorderBrushInactive}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <Trigger SourceName="border" Property="UIElement.Visibility" Value="Visible">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </Trigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.RightFloatWindowSelectedBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <DataTrigger Value="True"
                                Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}">
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.RightFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="True"/>
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:IWindow}}}"
                                  Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border"
                             Value="{Binding Path=(syncfusion:IWindow.DockingManager).(syncfusion:DockingManager.RightFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}"
                             Property="Border.Background"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource NewFloatWindowBorderStyle}"
            TargetType="{x:Type syncfusion:FloatWindowBorder}"/>

    <ControlTemplate x:Key="FloatWindowTemplate" TargetType="{x:Type ContentControl}">
        <AdornerDecorator>
            <DockPanel Focusable="false" LastChildFill="true"
                 Opacity="{Binding Path=Opacity, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:IWindow}}}">
                <Border Name="FloatWindowOutBorder" Focusable="false"
                BorderBrush="Transparent" BorderThickness="1"
                Background="{StaticResource XComponentDockingBackgroundBrush}" Margin="10">
                    <UIElement.Effect>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Direction="302" Opacity="0.8" Color="Gray"/>
                    </UIElement.Effect>
                    <Grid Focusable="false">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="TopRow" Style="{StaticResource RowDefinitionStyle}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition x:Name="BottomRow" Height="3"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="LeftCol" Width="3"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition x:Name="RightCol" Width="3"/>
                        </Grid.ColumnDefinitions>
                        <syncfusion:FloatWindowBorder Name="BorderLeftTop" BorderMode="LeftTop" Grid.Column="0" Grid.Row="0"/>
                        <syncfusion:FloatWindowBorder Name="BorderHeader" BorderMode="Header" Grid.Column="1" Grid.Row="0" Style="{StaticResource NewFloatWindowBorderStyle}"/>
                        <syncfusion:FloatWindowBorder Name="BorderRightTop" BorderMode="RightTop" Grid.Column="2" Grid.Row="0"/>
                        <syncfusion:FloatWindowBorder Name="BorderLeft" BorderMode="Left" Grid.Column="0" Grid.Row="1"/>
                        <ContentPresenter Name="ContentPresenter" Grid.Column="1" Grid.Row="1"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              Content="{TemplateBinding ContentControl.Content}"/>
                        <syncfusion:FloatWindowBorder Name="BorderRight" BorderMode="Right" Grid.Column="2" Grid.Row="1"/>
                        <syncfusion:FloatWindowBorder Name="BorderLeftBottom" BorderMode="LeftBottom" Grid.Column="0" Grid.Row="2"/>
                        <syncfusion:FloatWindowBorder Name="BorderBottom" BorderMode="Bottom" Grid.Column="1" Grid.Row="2" Margin="0,-2,0,0"/>
                        <syncfusion:FloatWindowBorder Name="BorderRightBottom" BorderMode="RightBottom" Grid.Column="2" Grid.Row="2"/>
                    </Grid>
                </Border>
            </DockPanel>
        </AdornerDecorator>
    </ControlTemplate>

    <!-- Floating window part end -->

    <Style x:Key="NewDockingManagerStyle" TargetType="{x:Type syncfusion:DockingManager}" BasedOn="{StaticResource {x:Type syncfusion:DockingManager}}">
        <Setter Property="syncfusion:DockingManager.DockWindowContextMenuItemStyle" Value="{StaticResource NewCustomContextMenuStyle2}"/>
        <Setter Property="syncfusion:DockingManager.DockHeaderStyle" Value="{StaticResource NewDockHeaderPresenterStyle}"/>
        <Setter Property="syncfusion:DockingManager.TabItemStyle" Value="{StaticResource NewTabItemStyle}"/>
        <Setter Property="syncfusion:DockingManager.FloatWindowTemplate" Value="{StaticResource FloatWindowTemplate}"/>
        <Setter Property="syncfusion:DockingManager.FloatWindowHeaderBackground" Value="{StaticResource XComponentDockingHeaderBrush}"/>
        <Setter Property="syncfusion:DockingManager.FloatWindowSelectedHeaderBackground" Value="{StaticResource XComponentDockingHeaderBrush}"/>
    </Style>

    <Style TargetType="{x:Type docking:XCDocking}" BasedOn="{StaticResource NewDockingManagerStyle}">        
    </Style>    
    
</ResourceDictionary>
